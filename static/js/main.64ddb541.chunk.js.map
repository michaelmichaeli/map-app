{"version":3,"sources":["contexts/ActiveSpatialContext.js","contexts/SpatialContext.js","contexts/UserMessageContext.js","components/SpatialRow.jsx","components/SpatialList.jsx","components/ViaMap2.jsx","components/UserMessages.jsx","App.js","reportWebVitals.js","index.js"],"names":["ActiveSpatialContext","createContext","ActiveSpatialProvider","children","useState","activeSpatialID","setActiveSpatialID","Provider","value","randomColor","require","cityseeker","SpatialContext","SpatialProvider","useContext","spatials","setSpatials","useEffect","a","axios","get","data","features","splice","map","feature","name","any","city","color","creationDate","Date","now","comment","fetchData","saveSpatial","spatial","spatialIndex","findIndex","currSpatial","id","newSpatial","newSpatials","length","luminosity","push","setTimeout","addNewSpatial","updateSpatial","deleteSpatialByID","spatialID","getActiveSpatialCoords","console","log","geometry","coordinates","UserMessageContext","UserMessageProvider","alertEdit","setAlertEdit","alertDelete","setAlertDelete","alertCreate","setAlertCreate","SpatialRow","className","onClick","style","backgroundColor","moment","fromNow","format","properties","ElectDist","Shape__Area","Shape__Length","title","SpatialComment","commentText","setCommentText","TextareaAutosize","aria-label","placeholder","onChange","e","target","SpatialNameInput","nameText","setNameText","TextField","SpatialColorPicker","setColor","disableAlpha","hideTextfield","css","toLocaleLowerCase","SpatialList","Icon","EditableLayer","props","leaflet","useLeaflet","editLayerRef","React","useRef","drawControlRef","showDrawControl","addControl","current","removeControl","leafletElement","clearLayers","addLayer","layer","on","onLayerClicked","FeatureGroup","ref","position","onMounted","ctl","onEdited","layers","eachLayer","l","changedLayerGeoJson","toGeoJSON","edit","remove","draw","marker","circle","rectangle","polygon","polyline","circlemarker","Tooltip","sticky","AddLayer","onCreated","EditableGroup","dataLayer","L","GeoJSON","fillColor","fillOpacity","opacity","tooltip","i","editLayerId","ViaMap2","Map","center","zoom","TileLayer","url","attribution","type","height","width","timeout","UserMessages","Snackbar","open","autoHideDuration","onClose","severity","elevation","variant","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64ddb541.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react'\r\n\r\nexport const ActiveSpatialContext = createContext()\r\n\r\nexport const ActiveSpatialProvider = ({ children }) => {\r\n\r\n    const [activeSpatialID, setActiveSpatialID] = useState(null)\r\n\r\n    return (\r\n        <ActiveSpatialContext.Provider value={{ activeSpatialID, setActiveSpatialID }}>\r\n            { children }\r\n        </ActiveSpatialContext.Provider>\r\n    )\r\n}","import React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { getApiData } from \"./../api\"; //when not fetching from real API\r\nimport { ActiveSpatialContext } from \"./ActiveSpatialContext\";\r\nimport axios from \"axios\";\r\n\r\nconst randomColor = require(\"randomcolor\");\r\nconst cityseeker = require(\"city-seeker\");\r\n\r\nexport const SpatialContext = createContext();\r\n\r\nexport const SpatialProvider = ({ children }) => {\r\n\tconst { activeSpatialID, setActiveSpatialID } = useContext(\r\n\t\tActiveSpatialContext\r\n\t);\r\n\r\n\tconst [spatials, setSpatials] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchData = async () => {\r\n\t\t\t// const data = await getApiData(); //when not fetching from real API\r\n\t\t\tlet data = await axios.get(\r\n\t\t\t\t\"https://services5.arcgis.com/GfwWNkhOj9bNBqoJ/arcgis/rest/services/NYC_Election_Districts_Water_Included/FeatureServer/0/query?where=1=1&outFields=*&outSR=4326&f=pgeojson\"\r\n\t\t\t);\r\n\t\t\tdata = data.data;\r\n\t\t\tdata.features = data.features\r\n\t\t\t\t.splice(0, 200) // TODO optimize big-data: fetching, memoizing, lazy-loading, infinite-loading...\r\n\t\t\t\t.map((feature) => {\r\n\t\t\t\t\tfeature.name = cityseeker.any().city.name;\r\n\t\t\t\t\tfeature.color = randomColor();\r\n\t\t\t\t\tfeature.creationDate = Date.now();\r\n\t\t\t\t\tfeature.comment =\r\n\t\t\t\t\t\t\"Lorem ipsum dolor sit, amet consectetur adipisicing elit. asperiores, pariatur nihil quod commodi? Necessitatibus, amet?\";\r\n\t\t\t\t\treturn feature;\r\n\t\t\t\t});\r\n\t\t\tsetSpatials(data);\r\n\t\t};\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\tconst getActiveSpatialCoords = () => {\r\n\t\tconst spatialIndex = spatials.features.findIndex(\r\n\t\t\t(currSpatial) => currSpatial.id === activeSpatialID\r\n\t\t);\r\n\t\tconsole.log(spatials.features[spatialIndex].geometry.coordinates[0][0]);\r\n\t\treturn [\r\n\t\t\tspatials.features[spatialIndex].geometry.coordinates[0][0][1],\r\n\t\t\tspatials.features[spatialIndex].geometry.coordinates[0][0][1],\r\n\t\t];\r\n\t};\r\n\r\n\tconst deleteSpatialByID = (spatialID) => {\r\n\t\tconst spatialIndex = spatials.features.findIndex(\r\n\t\t\t(currSpatial) => spatialID === currSpatial.id\r\n\t\t);\r\n\t\tconst newSpatials = { ...spatials };\r\n\t\tnewSpatials.features.splice(spatialIndex, 1);\r\n\r\n\t\tsetSpatials(newSpatials);\r\n\t\tsetActiveSpatialID(null);\r\n\t};\r\n\r\n\tconst saveSpatial = (spatial) => {\r\n\t\tconst addNewSpatial = () => {\r\n\t\t\tconst newSpatial = spatial;\r\n\t\t\tconst newSpatials = { ...spatials };\r\n\t\t\tif (spatials.length !== 0) {\r\n\t\t\t\tnewSpatial.id = spatials.features[spatials.features.length - 1].id + 1; // TODO: NEW UNIQUE ID\r\n\t\t\t} else {\r\n\t\t\t\tnewSpatial.id = 1; // TODO: NEW UNIQUE ID\r\n\t\t\t}\r\n\t\t\tnewSpatial.name = \"New \" + cityseeker.any().city.name;\r\n\t\t\tnewSpatial.color = randomColor({ luminosity: \"light\" });\r\n\t\t\tnewSpatial.creationDate = Date.now();\r\n\t\t\tnewSpatial.comment = \"\";\r\n\r\n\t\t\tnewSpatials.features.push(newSpatial);\r\n\t\t\tsetSpatials(newSpatials);\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetActiveSpatialID(newSpatial.id);\r\n\t\t\t}, 0);\r\n\t\t};\r\n\r\n\t\tconst updateSpatial = () => {\r\n\t\t\tconst newSpatials = spatials;\r\n\t\t\tnewSpatials.features[spatialIndex] = spatial;\r\n\t\t\tsetSpatials(newSpatials);\r\n\t\t};\r\n\r\n\t\tconst spatialIndex = spatials.features.findIndex(\r\n\t\t\t(currSpatial) => spatial.id === currSpatial.id\r\n\t\t);\r\n\r\n\t\tif (!spatial.id || spatialIndex < 0) addNewSpatial();\r\n\t\telse {\r\n\t\t\tupdateSpatial();\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<SpatialContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tspatials,\r\n\t\t\t\tsetSpatials,\r\n\t\t\t\tsaveSpatial,\r\n\t\t\t\tdeleteSpatialByID,\r\n\t\t\t\tgetActiveSpatialCoords,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</SpatialContext.Provider>\r\n\t);\r\n};\r\n","import React, { createContext, useState } from \"react\";\r\n\r\nexport const UserMessageContext = createContext();\r\n\r\nexport const UserMessageProvider = ({ children }) => {\r\n\tconst [ alertEdit, setAlertEdit] = useState(false);\r\n\tconst [ alertDelete, setAlertDelete ] = useState(false);\r\n\tconst [ alertCreate, setAlertCreate ] = useState(false);\r\n\r\n\treturn (\r\n\t\t<UserMessageContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\talertEdit,\r\n\t\t\t\tsetAlertEdit,\r\n\t\t\t\talertDelete,\r\n\t\t\t\tsetAlertDelete,\r\n\t\t\t\talertCreate,\r\n\t\t\t\tsetAlertCreate,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</UserMessageContext.Provider>\r\n\t);\r\n};\r\n","import moment from 'moment';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { TextareaAutosize, TextField } from '@material-ui/core';\r\nimport { ColorPicker } from 'material-ui-color';\r\nimport DeleteForeverOutlinedIcon from '@material-ui/icons/DeleteForeverOutlined';\r\n\r\nimport { SpatialContext } from '../contexts/SpatialContext';\r\nimport { ActiveSpatialContext } from './../contexts/ActiveSpatialContext'\r\nimport { UserMessageContext } from '../contexts/UserMessageContext';\r\n\r\n\r\nexport default function SpatialRow({ spatial }) {\r\n\r\n    const { activeSpatialID, setActiveSpatialID } = useContext(ActiveSpatialContext)\r\n    const { deleteSpatialByID } = useContext(SpatialContext)\r\n    const { setAlertDelete } = useContext(UserMessageContext)\r\n\r\n    return <li className={\"spatial-row flex-col\"}>\r\n        <div\r\n            className=\"row-header flex-row\"\r\n            onClick={() => {\r\n                (activeSpatialID === spatial.id) ?\r\n                    setActiveSpatialID(null)\r\n                    :\r\n                    setActiveSpatialID(spatial.id)\r\n                // console.log('clicked row spatial:', spatial);\r\n            }}\r\n        >\r\n            <p className=\"id\">{spatial.id}</p>\r\n            <div className=\"color-sample\" style={{ backgroundColor: spatial.color }}></div>\r\n            <h4 className=\"name\">{spatial.name}</h4>\r\n            {/* <a\r\n                className=\"find\"\r\n                title=\"Centralize map at spatial\"\r\n            // onClick={()=>setCenter()}\r\n            >Find</a> */}\r\n        </div>\r\n        {spatial.id === activeSpatialID && <div className=\"row-content\">\r\n            <div className=\"info\">\r\n                <p className=\"creation-date\">Created:\r\n                    <span>{moment(spatial.creationDate).fromNow()} on {moment(spatial.creationDate).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")}</span>\r\n                </p>\r\n                <p className=\"ElectDist\">ElectDist:\r\n                    <span>{spatial.properties.ElectDist ? spatial.properties.ElectDist : \"No Dist\"}</span>\r\n                </p>\r\n                <p className=\"shape-area\">shape-area:\r\n                    <span>{spatial.properties.Shape__Area ? spatial.properties.Shape__Area : \"No Shape Area\"}</span>\r\n                </p>\r\n                <p className=\"shape-length\">shape-length:\r\n                    <span>{spatial.properties.Shape__Length ? spatial.properties.Shape__Length : \"No Shape length\"}</span>\r\n                </p>\r\n                <p className=\"comment-title\">Comment: </p>\r\n                <SpatialComment spatial={spatial} />\r\n            </div>\r\n            <div className=\"edit-info\">\r\n                <SpatialColorPicker spatial={spatial} className=\"color-picker\" />\r\n                <SpatialNameInput spatial={spatial} />\r\n                <a\r\n                    className=\"delete\"\r\n                    title=\"Remove Forever\"\r\n                    onClick={() => {\r\n                        deleteSpatialByID(spatial.id)\r\n                        setAlertDelete(true)\r\n                    }}\r\n                >\r\n                    <DeleteForeverOutlinedIcon />\r\n                </a>\r\n            </div>\r\n        </div>}\r\n        \r\n    </li>\r\n}\r\n\r\nconst SpatialComment = ({ spatial }) => {\r\n    const { saveSpatial } = useContext(SpatialContext)\r\n    const [commentText, setCommentText] = useState(spatial.comment)\r\n    useEffect(() => {\r\n        spatial.comment = commentText\r\n        saveSpatial(spatial)\r\n    }, [commentText, saveSpatial, spatial])\r\n    return <TextareaAutosize\r\n        aria-label=\"comment-content\"\r\n        className=\"comment-content\"\r\n        value={commentText}\r\n        placeholder=\"No Comment.\"\r\n        onChange={e => {\r\n            setCommentText(e.target.value)\r\n            // spatial.comment = commentText\r\n            // saveSpatial(spatial)\r\n        }}\r\n    />;\r\n}\r\n\r\nconst SpatialNameInput = ({ spatial }) => {\r\n    const { saveSpatial } = useContext(SpatialContext)\r\n    const [nameText, setNameText] = useState(spatial.name)\r\n    useEffect(() => {\r\n        spatial.name = nameText ? nameText : spatial.name\r\n        saveSpatial(spatial)\r\n    }, [nameText, saveSpatial, spatial])\r\n    return <TextField\r\n        className=\"change-name\"\r\n        value={nameText}\r\n        placeholder=\"Required\"\r\n        onChange={e => {\r\n            setNameText(e.target.value)\r\n            // spatial.name = nameText ? nameText : spatial.name\r\n            // saveSpatial(spatial)\r\n        }}\r\n    />\r\n}\r\n\r\nconst SpatialColorPicker = ({ spatial }) => {\r\n    const { saveSpatial } = useContext(SpatialContext)\r\n    const [color, setColor] = useState(spatial.color)\r\n    useEffect(() => {\r\n        spatial.color = color\r\n        saveSpatial(spatial)\r\n    }, [color, saveSpatial, spatial])\r\n    return <ColorPicker\r\n        disableAlpha\r\n        hideTextfield\r\n        value={color}\r\n        onChange={e => {\r\n            setColor(e.css.backgroundColor.toLocaleLowerCase())\r\n            // spatial.color = color\r\n            // saveSpatial(spatial)\r\n        }}\r\n    />\r\n}","import React, { useContext } from 'react';\r\nimport SpatialRow from './SpatialRow'\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nimport { SpatialContext } from './../contexts/SpatialContext'\r\nimport { ActiveSpatialContext } from '../contexts/ActiveSpatialContext';\r\n\r\n\r\nexport default function SpatialList() {\r\n\r\n    const { spatials } = useContext(SpatialContext)\r\n    const { activeSpatialID, setActiveSpatialID } = useContext(\r\n        ActiveSpatialContext\r\n    );\r\n\r\n    return spatials ? (<div className=\"spatial-list-container\">\r\n        <div className=\"list-header flex-row flex-space-between\">\r\n            <h3>Spatials:</h3>\r\n            {activeSpatialID && <a\r\n                className=\"done\"\r\n                title=\"Done\"\r\n                onClick={() => setActiveSpatialID(null)\r\n                }\r\n            >\r\n                <Icon className=\"done-icon\">done</Icon>\r\n            </a>}\r\n        </div>\r\n        <ul>\r\n            {spatials.features.map((spatial) => {\r\n                return <SpatialRow\r\n                    spatial={spatial}\r\n                    key={spatial.id} />\r\n            })}\r\n        </ul>\r\n        <p className=\"list-end\">----List-End----</p>\r\n    </div>)\r\n        : null\r\n}","import React, { useContext, useEffect } from \"react\";\r\nimport { Map, TileLayer, FeatureGroup, useLeaflet, Tooltip } from \"react-leaflet\";\r\nimport { EditControl } from \"react-leaflet-draw\";\r\nimport L from \"leaflet\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport { SpatialContext } from '../contexts/SpatialContext'\r\nimport { ActiveSpatialContext } from '../contexts/ActiveSpatialContext'\r\nimport { UserMessageContext } from \"../contexts/UserMessageContext\";\r\n\r\n\r\nfunction EditableLayer(props) {\r\n    const { spatials, saveSpatial } = useContext(SpatialContext)\r\n    const { setAlertEdit } = useContext(UserMessageContext)\r\n\r\n    const leaflet = useLeaflet();\r\n    const editLayerRef = React.useRef();\r\n    let drawControlRef = React.useRef();\r\n    let { map } = leaflet;\r\n\r\n    useEffect(() => {\r\n        if (!props.showDrawControl) {\r\n            map.removeControl(drawControlRef.current);\r\n        } else {\r\n            map.addControl(drawControlRef.current);\r\n        }\r\n        editLayerRef.current.leafletElement.clearLayers();\r\n        editLayerRef.current.leafletElement.addLayer(props.layer);\r\n        props.layer.on(\"click\", function (e) {\r\n            props.onLayerClicked(e, drawControlRef.current);\r\n        });\r\n    }, [props, map, spatials]);\r\n\r\n    const onMounted = (ctl) => {\r\n        drawControlRef.current = ctl;\r\n    }\r\n\r\n    const onEdited = e => {\r\n        e.layers.eachLayer(l => {\r\n            const changedLayerGeoJson = l.toGeoJSON();\r\n            const { layer } = props;\r\n            if (changedLayerGeoJson.id === layer.feature.id) {\r\n                saveSpatial(changedLayerGeoJson)\r\n                setAlertEdit(true)\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <FeatureGroup ref={editLayerRef}>\r\n                <EditControl\r\n                    position=\"topright\"\r\n                    onMounted={onMounted}\r\n                    onEdited={onEdited}\r\n                    edit={{\r\n                        remove: false,\r\n                        edit: true\r\n                    }}\r\n                    draw={{\r\n                        marker: false,\r\n                        circle: false,\r\n                        rectangle: false,\r\n                        polygon: false,\r\n                        polyline: false,\r\n                        circlemarker: false\r\n                    }}\r\n                    {...props}\r\n                />\r\n                <Tooltip sticky>{props.layer.feature.name}</Tooltip>\r\n            </FeatureGroup>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AddLayer(props) {\r\n    const { saveSpatial } = useContext(SpatialContext)\r\n    const { activeSpatialID } = useContext(ActiveSpatialContext)\r\n    const { setAlertCreate } = useContext(UserMessageContext)\r\n\r\n    const leaflet = useLeaflet();\r\n    let drawControlRef = React.useRef();\r\n    let { map } = leaflet;\r\n\r\n    useEffect(() => {\r\n        if (activeSpatialID) {\r\n            map.removeControl(drawControlRef.current);\r\n        } else {\r\n            map.addControl(drawControlRef.current);\r\n        }\r\n    }, [props, map, activeSpatialID]);\r\n\r\n    const onMounted = (ctl) => {\r\n        drawControlRef.current = ctl;\r\n    }\r\n\r\n    const onCreated = e => {\r\n        saveSpatial(e.layer.toGeoJSON())\r\n        setAlertCreate(true)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <FeatureGroup>\r\n                <EditControl\r\n                    position=\"topright\"\r\n                    onMounted={onMounted}\r\n                    onCreated={onCreated}\r\n                    edit={{\r\n                        remove: false,\r\n                        edit: false\r\n                    }}\r\n                    draw={{\r\n                        marker: false,\r\n                        circle: false,\r\n                        rectangle: false,\r\n                        polygon: true,\r\n                        polyline: false,\r\n                        circlemarker: false\r\n                    }}\r\n                    {...props}\r\n                />\r\n            </FeatureGroup>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction EditableGroup({ data }) {\r\n    const { activeSpatialID, setActiveSpatialID } = useContext(ActiveSpatialContext)\r\n\r\n    const dataLayer = new L.GeoJSON(data, {\r\n        style: feature => {\r\n            return ({\r\n                fillColor: feature.color,\r\n                fillOpacity: activeSpatialID === feature.id ? 1 : 0.4,\r\n                color: \"black\",\r\n                opacity: activeSpatialID === feature.id ? 1 : 0.2\r\n            })\r\n        },\r\n        tooltip: feature => (feature.name)\r\n    });\r\n    const layers = [];\r\n    let i = 1;\r\n    dataLayer.eachLayer((layer) => {\r\n        layer.feature.properties.editLayerId = i++;\r\n        layers.push(layer);\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            {layers.map((layer, i) => {\r\n                const { editLayerId } = layer.feature.properties;\r\n                return (\r\n                    <EditableLayer\r\n                        key={i}\r\n                        layer={layer}\r\n                        showDrawControl={i === activeSpatialID - 1}\r\n                        onLayerClicked={() => {\r\n                            setActiveSpatialID(editLayerId)\r\n                        }}\r\n                    >\r\n                        \r\n                    </EditableLayer >\r\n                );\r\n            })}\r\n            <AddLayer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function ViaMap2(props) {\r\n    const { spatials } = useContext(SpatialContext)\r\n\r\n    const center = [40.64564461264746, -73.84831527895031]\r\n\r\n    return spatials ?\r\n        (<Map\r\n            center={center}\r\n            // center={[spatials.features[0].geometry.coordinates[0][0][1], spatials.features[0].geometry.coordinates[0][0][0]]}\r\n            zoom={12}>\r\n            < TileLayer\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            />\r\n            <EditableGroup data={spatials} />\r\n        </Map >)\r\n        : (<Loader\r\n            className=\"loader\"\r\n            type=\"Circles\"\r\n            color=\"#00BFFF\"\r\n            height={200}\r\n            width={200}\r\n            timeout={3000} //3 secs\r\n        />)\r\n}","import React, { useContext } from \"react\";\r\n\r\nimport { UserMessageContext } from './../contexts/UserMessageContext'\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nexport default function UserMessages() {\r\n\r\n    const {\r\n        alertEdit,\r\n        setAlertEdit,\r\n        alertDelete,\r\n        setAlertDelete,\r\n        alertCreate,\r\n        setAlertCreate,\r\n    } = useContext(UserMessageContext)\r\n\r\n    return (\r\n        <div className=\"user-message\">\r\n            <Snackbar open={alertEdit} autoHideDuration={6000} onClose={() => setAlertEdit(false)}>\r\n                <MuiAlert onClose={() => setAlertEdit(false)} severity=\"info\" elevation={6} variant=\"filled\" >\r\n                    Spatial was saved successfully\r\n                </MuiAlert>\r\n            </Snackbar>\r\n            <Snackbar open={alertDelete} autoHideDuration={6000} onClose={() => setAlertDelete(false)}>\r\n                <MuiAlert onClose={() => setAlertDelete(false)} severity=\"warning\" elevation={6} variant=\"filled\" >\r\n                    Spatial was deleted succssfully\r\n                </MuiAlert>\r\n            </Snackbar>\r\n            <Snackbar open={alertCreate} autoHideDuration={6000} onClose={() => setAlertCreate(false)}>\r\n                <MuiAlert onClose={() => setAlertCreate(false)} severity=\"success\" elevation={6} variant=\"filled\" >\r\n                    Spatial created successfully\r\n                </MuiAlert>\r\n            </Snackbar>\r\n        </div>\r\n    )\r\n}","import { useContext } from \"react\";\nimport \"./App.scss\";\nimport SpatialList from \"./components/SpatialList\";\nimport ViaMap2 from \"./components/ViaMap2\";\n\nimport { SpatialContext } from \"./contexts/SpatialContext\";\nimport UserMessages from \"./components/UserMessages\";\n\nfunction App() {\n\tconst { spatials } = useContext(SpatialContext);\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<UserMessages />\n\t\t\t<ViaMap2 />\n\t\t\t{spatials && <SpatialList />}\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { SpatialProvider } from \"./contexts/SpatialContext\";\nimport { ActiveSpatialProvider } from \"./contexts/ActiveSpatialContext\";\nimport { UserMessageProvider } from \"./contexts/UserMessageContext\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<ActiveSpatialProvider>\n\t\t\t<SpatialProvider>\n\t\t\t\t<UserMessageProvider>\n\t\t\t\t\t<App />\n\t\t\t\t</UserMessageProvider>\n\t\t\t</SpatialProvider>\n\t\t</ActiveSpatialProvider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}