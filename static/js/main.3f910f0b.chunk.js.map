{"version":3,"sources":["contexts/ActiveSpatialContext.js","contexts/SpatialContext.js","contexts/UserMessageContext.js","components/SpatialRow.jsx","components/SpatialList.jsx","components/ViaMap.jsx","components/UserMessages.jsx","App.js","reportWebVitals.js","index.js"],"names":["ActiveSpatialContext","createContext","ActiveSpatialProvider","children","useState","activeSpatialID","setActiveSpatialID","Provider","value","randomColor","require","cityseeker","SpatialContext","SpatialProvider","useContext","spatials","setSpatials","useEffect","a","axios","get","data","features","splice","map","feature","name","any","city","color","creationDate","Date","now","comment","fetchData","saveSpatial","spatial","spatialIndex","findIndex","currSpatial","id","newSpatial","newSpatials","length","luminosity","push","setTimeout","addNewSpatial","updateSpatial","deleteSpatialByID","spatialID","UserMessageContext","UserMessageProvider","alertEdit","setAlertEdit","alertDelete","setAlertDelete","alertCreate","setAlertCreate","SpatialRow","className","onClick","style","backgroundColor","moment","fromNow","format","properties","ElectDist","Shape__Area","toFixed","title","SpatialComment","commentText","setCommentText","TextareaAutosize","aria-label","placeholder","onChange","e","target","SpatialNameInput","nameText","setNameText","TextField","SpatialColorPicker","setColor","disableAlpha","hideTextfield","css","toLocaleLowerCase","SpatialList","document","documentElement","smoothScrollIntoView","scrollIntoView","getElementById","behavior","block","Icon","ViaMap","Map","center","zoom","TileLayer","url","attribution","EditableGroup","type","height","width","timeout","dataLayer","L","GeoJSON","fillColor","fillOpacity","opacity","layers","eachLayer","layer","i","EditableLayer","showDrawControl","onLayerClicked","AddLayer","props","leaflet","useLeaflet","editLayerRef","React","useRef","drawControlRef","addControl","current","removeControl","leafletElement","clearLayers","addLayer","on","FeatureGroup","ref","position","onMounted","ctl","onEdited","l","changedLayerGeoJson","toGeoJSON","GeometryUtil","geodesicArea","getLatLngs","edit","remove","draw","marker","circle","rectangle","polygon","polyline","circlemarker","Tooltip","sticky","Math","floor","onCreated","UserMessages","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","severity","elevation","variant","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"uUAEaA,EAAuBC,0BAEvBC,EAAwB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAELC,mBAAS,MAFJ,mBAE5CC,EAF4C,KAE3BC,EAF2B,KAInD,OACI,cAACN,EAAqBO,SAAtB,CAA+BC,MAAO,CAAEH,kBAAiBC,sBAAzD,SACMH,K,iBCLRM,EAAcC,EAAQ,KACtBC,EAAaD,EAAQ,KAEdE,EAAiBX,0BAEjBY,EAAkB,SAAC,GAAkB,IAAhBV,EAAe,EAAfA,SACzBG,EAAuBQ,qBAC9Bd,GADOM,mBADwC,EAKhBF,mBAAS,MALO,mBAKzCW,EALyC,KAK/BC,EAL+B,KAOhDC,qBAAU,YACM,uCAAG,4BAAAC,EAAA,sEAEAC,IAAMC,IACtB,8KAHgB,QAKjBC,GAHIA,EAFa,QAKLA,MACPC,SAAWD,EAAKC,SACnBC,OAAO,EAAG,KACVC,KAAI,SAACC,GAML,OALAA,EAAQC,KAAOf,EAAWgB,MAAMC,KAAKF,KACrCD,EAAQI,MAAQpB,IAChBgB,EAAQK,aAAeC,KAAKC,MAC5BP,EAAQQ,QACP,2HACMR,KAETT,EAAYK,GAhBK,2CAAH,qDAkBfa,KACE,IAkDH,OACC,cAACtB,EAAeL,SAAhB,CACCC,MAAO,CACNO,WACAC,cACAmB,YA1CiB,SAACC,GACpB,IA0BMC,EAAetB,EAASO,SAASgB,WACtC,SAACC,GAAD,OAAiBH,EAAQI,KAAOD,EAAYC,OAGxCJ,EAAQI,IAAMH,EAAe,EA9BZ,WACrB,IAAMI,EAAaL,EACbM,EAAW,eAAQ3B,GACD,IAApBA,EAAS4B,OACZF,EAAWD,GAAKzB,EAASO,SAASP,EAASO,SAASqB,OAAS,GAAGH,GAAK,EAErEC,EAAWD,GAAK,EAEjBC,EAAWf,KAAO,OAASf,EAAWgB,MAAMC,KAAKF,KACjDe,EAAWZ,MAAQpB,EAAY,CAAEmC,WAAY,UAC7CH,EAAWX,aAAeC,KAAKC,MAC/BS,EAAWR,QAAU,GAErBS,EAAYpB,SAASuB,KAAKJ,GAC1BzB,EAAY0B,GACZI,YAAW,WACVxC,EAAmBmC,EAAWD,MAC5B,GAaiCO,GAVf,WACrB,IAAML,EAAc3B,EACpB2B,EAAYpB,SAASe,GAAgBD,EACrCpB,EAAY0B,GASZM,IAUCC,kBAtDuB,SAACC,GAC1B,IAAMb,EAAetB,EAASO,SAASgB,WACtC,SAACC,GAAD,OAAiBW,IAAcX,EAAYC,MAEtCE,EAAW,eAAQ3B,GACzB2B,EAAYpB,SAASC,OAAOc,EAAc,GAE1CrB,EAAY0B,GACZpC,EAAmB,QAyCnB,SAQEH,KC9FSgD,EAAqBlD,0BAErBmD,EAAsB,SAAC,GAAkB,IAAhBjD,EAAe,EAAfA,SAAe,EACjBC,oBAAS,GADQ,mBAC5CiD,EAD4C,KACjCC,EADiC,OAEZlD,oBAAS,GAFG,mBAE5CmD,EAF4C,KAE/BC,EAF+B,OAGZpD,oBAAS,GAHG,mBAG5CqD,EAH4C,KAG/BC,EAH+B,KAKpD,OACC,cAACP,EAAmB5C,SAApB,CACCC,MAAO,CACN6C,YACAC,eACAC,cACAC,iBACAC,cACAC,kBAPF,SAUEvD,KCVW,SAASwD,EAAT,GAAkC,IAAZvB,EAAW,EAAXA,QAAW,EAEItB,qBAAWd,GAAnDK,EAFoC,EAEpCA,gBAAiBC,EAFmB,EAEnBA,mBACjB2C,EAAsBnC,qBAAWF,GAAjCqC,kBACAO,EAAmB1C,qBAAWqC,GAA9BK,eAER,OAAO,qBACHI,UAAW,uBACXpB,GAAIJ,EAAQI,GAFT,UAIH,sBACIoB,UAAU,sBACVC,QAAS,WACJxD,IAAoB+B,EAAQI,GACzBlC,EAAmB,MAEnBA,EAAmB8B,EAAQI,KANvC,UASI,mBAAGoB,UAAU,KAAb,SAAmBxB,EAAQI,KAC3B,qBAAKoB,UAAU,eAAeE,MAAO,CAAEC,gBAAiB3B,EAAQP,SAChE,oBAAI+B,UAAU,OAAd,SAAsBxB,EAAQV,UAOjCU,EAAQI,KAAOnC,GAAmB,sBAAKuD,UAAU,cAAf,UAC/B,sBAAKA,UAAU,OAAf,UACI,oBAAGA,UAAU,gBAAb,qBACI,iCAAOI,IAAO5B,EAAQN,cAAcmC,UAApC,OAAmDD,IAAO5B,EAAQN,cAAcoC,OAAO,uCAE3F,oBAAGN,UAAU,YAAb,gCACI,+BAAOxB,EAAQ+B,WAAWC,UAAYhC,EAAQ+B,WAAWC,UAAY,eAEzE,oBAAGR,UAAU,aAAb,kBACI,+BAAOxB,EAAQ+B,WAAWE,YAAcjC,EAAQ+B,WAAWE,YAAYC,QAAQ,GAAK,qBAExF,mBAAGV,UAAU,gBAAb,uBACA,cAAC,EAAD,CAAgBxB,QAASA,OAE7B,sBAAKwB,UAAU,YAAf,UACI,cAAC,EAAD,CAAoBxB,QAASA,EAASwB,UAAU,iBAChD,cAAC,EAAD,CAAkBxB,QAASA,IAC3B,mBACIwB,UAAU,SACVW,MAAM,iBACNV,QAAS,WACLZ,EAAkBb,EAAQI,IAC1BgB,GAAe,IALvB,SAQI,cAAC,IAAD,eAQpB,IAAMgB,EAAiB,SAAC,GAAiB,IAAfpC,EAAc,EAAdA,QACdD,EAAgBrB,qBAAWF,GAA3BuB,YAD4B,EAEE/B,mBAASgC,EAAQH,SAFnB,mBAE7BwC,EAF6B,KAEhBC,EAFgB,KAOpC,OAJAzD,qBAAU,WACNmB,EAAQH,QAAUwC,EAClBtC,EAAYC,KACb,CAACqC,EAAatC,EAAaC,IACvB,cAACuC,EAAA,EAAD,CACHC,aAAW,kBACXhB,UAAU,kBACVpD,MAAOiE,EACPI,YAAY,cACZC,SAAU,SAAAC,GACNL,EAAeK,EAAEC,OAAOxE,WAO9ByE,EAAmB,SAAC,GAAiB,IAAf7C,EAAc,EAAdA,QAChBD,EAAgBrB,qBAAWF,GAA3BuB,YAD8B,EAEN/B,mBAASgC,EAAQV,MAFX,mBAE/BwD,EAF+B,KAErBC,EAFqB,KAOtC,OAJAlE,qBAAU,WACNmB,EAAQV,KAAOwD,GAAsB9C,EAAQV,KAC7CS,EAAYC,KACb,CAAC8C,EAAU/C,EAAaC,IACpB,cAACgD,EAAA,EAAD,CACHxB,UAAU,cACVpD,MAAO0E,EACPL,YAAY,WACZC,SAAU,SAAAC,GACNI,EAAYJ,EAAEC,OAAOxE,WAO3B6E,EAAqB,SAAC,GAAiB,IAAfjD,EAAc,EAAdA,QAClBD,EAAgBrB,qBAAWF,GAA3BuB,YADgC,EAEd/B,mBAASgC,EAAQP,OAFH,mBAEjCA,EAFiC,KAE1ByD,EAF0B,KAOxC,OAJArE,qBAAU,WACNmB,EAAQP,MAAQA,EAChBM,EAAYC,KACb,CAACP,EAAOM,EAAaC,IACjB,cAAC,IAAD,CACHmD,cAAY,EACZC,eAAa,EACbhF,MAAOqB,EACPiD,SAAU,SAAAC,GACNO,EAASP,EAAEU,IAAI1B,gBAAgB2B,yB,yBC/G5B,SAASC,IAAe,IAE3B5E,EAAaD,qBAAWF,GAAxBG,SAF0B,EAGcD,qBAC5Cd,GADIK,EAH0B,EAG1BA,gBAAiBC,EAHS,EAGTA,mBAkBzB,OAdAW,qBAAU,WACFZ,IAEI,mBAAoBuF,SAASC,gBAAgB/B,MACvCgC,IACAC,KACGH,SAASI,eAAe3F,GACR,CACzB4F,SAAU,SACVC,MAAO,aAGhB,CAAC7F,IAEGU,EACA,sBAAK6C,UAAU,yBAAf,UACC,sBAAKA,UAAU,0CAAf,UACI,2CACCvD,GAAmB,mBAChBuD,UAAU,OACVW,MAAM,OACNV,QAAS,kBAAMvD,EAAmB,OAHlB,SAMhB,cAAC6F,EAAA,EAAD,CAAMvC,UAAU,YAAhB,uBAGR,6BACK7C,EAASO,SAASE,KAAI,SAACY,GACpB,OAAO,cAACuB,EAAD,CACHvB,QAASA,GACJA,EAAQI,SAGzB,mBAAGoB,UAAU,WAAb,iCAEF,K,oGC1CK,SAASwC,IAAU,IACtBrF,EAAaD,qBAAWF,GAAxBG,SAIR,OAAOA,EACA,eAACsF,EAAA,EAAD,CACCC,OAJO,CAAC,mBAAoB,mBAK5BC,KAAM,GAFP,UAGC,cAAEC,EAAA,EAAF,CACIC,IAAI,qDACJC,YAAY,2EAEhB,cAACC,EAAD,CAAetF,KAAMN,OAEtB,qBAAK6C,UAAU,mBAAf,SACC,cAAC,IAAD,CACIA,UAAU,SACVgD,KAAK,UACL/E,MAAM,UACNgF,OAAQ,IACRC,MAAO,IACPC,QAAS,QAMzB,SAASJ,EAAT,GAAkC,IAATtF,EAAQ,EAARA,KAAQ,EACmBP,qBAAWd,GAAnDK,EADqB,EACrBA,gBAAiBC,EADI,EACJA,mBAEnB0G,EAAY,IAAIC,IAAEC,QAAQ7F,EAAM,CAClCyC,MAAO,SAAArC,GACH,MAAQ,CACJ0F,UAAW1F,EAAQI,MACnBuF,YAAa/G,IAAoBoB,EAAQe,GAAK,EAAI,GAClDX,MAAO,QACPwF,QAAShH,IAAoBoB,EAAQe,GAAK,EAAI,OAIpD8E,EAAS,GAKf,OAJAN,EAAUO,WAAU,SAACC,GACjBF,EAAOzE,KAAK2E,MAIZ,gCACKF,EAAO9F,KAAI,SAACgG,EAAOC,GAAO,IACfjF,EAAOgF,EAAM/F,QAAbe,GACR,OACI,cAACkF,EAAD,CAEIF,MAAOA,EACPG,gBAAiBnF,IAAOnC,EACxBuH,eAAgB,WACZtH,EAAmBkC,KAJlBiF,MAUjB,cAACI,EAAD,OAKZ,SAASH,EAAcI,GAAQ,IAAD,EACQhH,qBAAWF,GAArCG,EADkB,EAClBA,SAAUoB,EADQ,EACRA,YACVmB,EAAiBxC,qBAAWqC,GAA5BG,aAEFyE,EAAUC,cACVC,EAAeC,IAAMC,SACvBC,EAAiBF,IAAMC,SACrB3G,EAAQuG,EAARvG,IAENP,qBAAU,WACD6G,EAAMH,gBAGPnG,EAAI6G,WAAWD,EAAeE,SAF9B9G,EAAI+G,cAAcH,EAAeE,SAIrCL,EAAaK,QAAQE,eAAeC,cACpCR,EAAaK,QAAQE,eAAeE,SAASZ,EAAMN,OACnDM,EAAMN,MAAMmB,GAAG,SAAS,SAAU5D,GAC9B+C,EAAMF,eAAe7C,EAAGqD,EAAeE,cAE5C,CAACR,EAAOtG,EAAKT,IAkBhB,OACI,8BACI,eAAC6H,EAAA,EAAD,CAAcC,IAAKZ,EAAnB,UACI,cAAC,IAAD,aACIa,SAAS,WACTC,UArBE,SAACC,GACfZ,EAAeE,QAAUU,GAqBbC,SAlBC,SAAAlE,GACbA,EAAEuC,OAAOC,WAAU,SAAA2B,GACf,IAAMC,EAAsBD,EAAEE,YACtB5B,EAAUM,EAAVN,MACJ2B,EAAoB3G,KAAOgF,EAAM/F,QAAQe,KACzC2G,EAAoBhF,WAAWE,YAAc4C,IAAEoC,aAAaC,aAAaJ,EAAEK,aAAa,IACxFpH,EAAYgH,GACZ7F,GAAa,QAYTkG,KAAM,CACFC,QAAQ,EACRD,MAAM,GAEVE,KAAM,CACFC,QAAQ,EACRC,QAAQ,EACRC,WAAW,EACXC,SAAS,EACTC,UAAU,EACVC,cAAc,IAEdlC,IAER,eAACmC,EAAA,EAAD,CAASC,QAAM,EAAf,UAAgB,6BAAKpC,EAAMN,MAAM/F,QAAQC,OACrC,4BAAIyI,KAAKC,MAAMtC,EAAMN,MAAM/F,QAAQ0C,WAAWE,aAAe,kBAOjF,SAASwD,EAASC,GAAQ,IACd3F,EAAgBrB,qBAAWF,GAA3BuB,YACA9B,EAAoBS,qBAAWd,GAA/BK,gBACAqD,EAAmB5C,qBAAWqC,GAA9BO,eAEFqE,EAAUC,cACZI,EAAiBF,IAAMC,SACrB3G,EAAQuG,EAARvG,IAENP,qBAAU,WACFZ,EACAmB,EAAI+G,cAAcH,EAAeE,SAEjC9G,EAAI6G,WAAWD,EAAeE,WAEnC,CAACR,EAAOtG,EAAKnB,IAahB,OACI,8BACI,cAACuI,EAAA,EAAD,UACI,cAAC,IAAD,aACIE,SAAS,WACTC,UAhBE,SAACC,GACfZ,EAAeE,QAAUU,GAgBbqB,UAbE,SAAAtF,GACd,IAAMtC,EAAasC,EAAEyC,MAAM4B,YAC3B3G,EAAW0B,WAAWE,YAAc4C,IAAEoC,aAAaC,aAAavE,EAAEyC,MAAM+B,aAAa,IACrFpH,EAAYM,GACZiB,GAAe,IAUH8F,KAAM,CACFC,QAAQ,EACRD,MAAM,GAEVE,KAAM,CACFC,QAAQ,EACRC,QAAQ,EACRC,WAAW,EACXC,SAAS,EACTC,UAAU,EACVC,cAAc,IAEdlC,Q,sBC1LT,SAASwC,KAAgB,IAAD,EAS/BxJ,qBAAWqC,GANXE,EAH+B,EAG/BA,UACAC,EAJ+B,EAI/BA,aACAC,EAL+B,EAK/BA,YACAC,EAN+B,EAM/BA,eACAC,EAP+B,EAO/BA,YACAC,EAR+B,EAQ/BA,eAGJ,OACI,sBAAKE,UAAU,eAAf,UACI,cAAC2G,EAAA,EAAD,CACIC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CC,KAAMtH,EACNuH,iBAAkB,IAClBC,QAAS,kBAAMvH,GAAa,IAJhC,SAKI,cAAC,IAAD,CACIuH,QAAS,kBAAMvH,GAAa,IAC5BwH,SAAS,OACTC,UAAW,EACXC,QAAQ,SAJZ,8CASJ,cAACT,EAAA,EAAD,CACIC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CC,KAAMpH,EACNqH,iBAAkB,IAClBC,QAAS,kBAAMrH,GAAe,IAJlC,SAKI,cAAC,IAAD,CACIqH,QAAS,kBAAMrH,GAAe,IAC9BsH,SAAS,UACTC,UAAW,EACXC,QAAQ,SAJZ,+CASJ,cAACT,EAAA,EAAD,CACIC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CC,KAAMlH,EACNmH,iBAAkB,IAClBC,QAAS,kBAAMnH,GAAe,IAJlC,SAKI,cAAC,IAAD,CACImH,QAAS,kBAAMnH,GAAe,IAC9BoH,SAAS,UACTC,UAAW,EACXC,QAAQ,SAJZ,+CClCDC,OAXf,WAAgB,IACPlK,EAAaD,qBAAWF,GAAxBG,SACR,OACC,sBAAK6C,UAAU,MAAf,UACC,cAAC0G,GAAD,IACA,cAAClE,EAAD,IACCrF,GAAY,cAAC4E,EAAD,QCFDuF,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCGdQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,GAAD,YAKJjG,SAASI,eAAe,SAMzBkF,M","file":"static/js/main.3f910f0b.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react'\r\n\r\nexport const ActiveSpatialContext = createContext()\r\n\r\nexport const ActiveSpatialProvider = ({ children }) => {\r\n\r\n    const [activeSpatialID, setActiveSpatialID] = useState(null)\r\n\r\n    return (\r\n        <ActiveSpatialContext.Provider value={{ activeSpatialID, setActiveSpatialID }}>\r\n            { children }\r\n        </ActiveSpatialContext.Provider>\r\n    )\r\n}","import React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { getApiData } from \"./../api\"; //when not fetching from real API\r\nimport { ActiveSpatialContext } from \"./ActiveSpatialContext\";\r\nimport axios from \"axios\";\r\n\r\nconst randomColor = require(\"randomcolor\");\r\nconst cityseeker = require(\"city-seeker\");\r\n\r\nexport const SpatialContext = createContext();\r\n\r\nexport const SpatialProvider = ({ children }) => {\r\n\tconst { setActiveSpatialID } = useContext(\r\n\t\tActiveSpatialContext\r\n\t);\r\n\r\n\tconst [spatials, setSpatials] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchData = async () => {\r\n\t\t\t// const data = await getApiData(); //when not fetching from real API\r\n\t\t\tlet data = await axios.get(\r\n\t\t\t\t\"https://services5.arcgis.com/GfwWNkhOj9bNBqoJ/arcgis/rest/services/NYC_Election_Districts_Water_Included/FeatureServer/0/query?where=1=1&outFields=*&outSR=4326&f=pgeojson\"\r\n\t\t\t);\r\n\t\t\tdata = data.data;\r\n\t\t\tdata.features = data.features\r\n\t\t\t\t.splice(0, 590) // TODO optimize big-data: fetching, memoizing, lazy-loading, infinite-loading...\r\n\t\t\t\t.map((feature) => {\r\n\t\t\t\t\tfeature.name = cityseeker.any().city.name;\r\n\t\t\t\t\tfeature.color = randomColor();\r\n\t\t\t\t\tfeature.creationDate = Date.now();\r\n\t\t\t\t\tfeature.comment =\r\n\t\t\t\t\t\t\"Lorem ipsum dolor sit, amet consectetur adipisicing elit. asperiores, pariatur nihil quod commodi? Necessitatibus, amet?\";\r\n\t\t\t\t\treturn feature;\r\n\t\t\t\t});\r\n\t\t\tsetSpatials(data);\r\n\t\t};\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\tconst deleteSpatialByID = (spatialID) => {\r\n\t\tconst spatialIndex = spatials.features.findIndex(\r\n\t\t\t(currSpatial) => spatialID === currSpatial.id\r\n\t\t);\r\n\t\tconst newSpatials = { ...spatials };\r\n\t\tnewSpatials.features.splice(spatialIndex, 1);\r\n\r\n\t\tsetSpatials(newSpatials);\r\n\t\tsetActiveSpatialID(null);\r\n\t};\r\n\r\n\tconst saveSpatial = (spatial) => {\r\n\t\tconst addNewSpatial = () => {\r\n\t\t\tconst newSpatial = spatial;\r\n\t\t\tconst newSpatials = { ...spatials };\r\n\t\t\tif (spatials.length !== 0) {\r\n\t\t\t\tnewSpatial.id = spatials.features[spatials.features.length - 1].id + 1; // TODO: NEW UNIQUE ID\r\n\t\t\t} else {\r\n\t\t\t\tnewSpatial.id = 1; // TODO: NEW UNIQUE ID\r\n\t\t\t}\r\n\t\t\tnewSpatial.name = \"New \" + cityseeker.any().city.name;\r\n\t\t\tnewSpatial.color = randomColor({ luminosity: \"light\" });\r\n\t\t\tnewSpatial.creationDate = Date.now();\r\n\t\t\tnewSpatial.comment = \"\";\r\n\r\n\t\t\tnewSpatials.features.push(newSpatial);\r\n\t\t\tsetSpatials(newSpatials);\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetActiveSpatialID(newSpatial.id);\r\n\t\t\t}, 0);\r\n\t\t};\r\n\r\n\t\tconst updateSpatial = () => {\r\n\t\t\tconst newSpatials = spatials;\r\n\t\t\tnewSpatials.features[spatialIndex] = spatial;\r\n\t\t\tsetSpatials(newSpatials);\r\n\t\t};\r\n\r\n\t\tconst spatialIndex = spatials.features.findIndex(\r\n\t\t\t(currSpatial) => spatial.id === currSpatial.id\r\n\t\t);\r\n\r\n\t\tif (!spatial.id || spatialIndex < 0) addNewSpatial();\r\n\t\telse {\r\n\t\t\tupdateSpatial();\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<SpatialContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tspatials,\r\n\t\t\t\tsetSpatials,\r\n\t\t\t\tsaveSpatial,\r\n\t\t\t\tdeleteSpatialByID,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</SpatialContext.Provider>\r\n\t);\r\n};\r\n","import React, { createContext, useState } from \"react\";\r\n\r\nexport const UserMessageContext = createContext();\r\n\r\nexport const UserMessageProvider = ({ children }) => {\r\n\tconst [ alertEdit, setAlertEdit] = useState(false);\r\n\tconst [ alertDelete, setAlertDelete ] = useState(false);\r\n\tconst [ alertCreate, setAlertCreate ] = useState(false);\r\n\r\n\treturn (\r\n\t\t<UserMessageContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\talertEdit,\r\n\t\t\t\tsetAlertEdit,\r\n\t\t\t\talertDelete,\r\n\t\t\t\tsetAlertDelete,\r\n\t\t\t\talertCreate,\r\n\t\t\t\tsetAlertCreate,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</UserMessageContext.Provider>\r\n\t);\r\n};\r\n","import moment from 'moment';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { TextareaAutosize, TextField } from '@material-ui/core';\r\nimport { ColorPicker } from 'material-ui-color';\r\nimport DeleteForeverOutlinedIcon from '@material-ui/icons/DeleteForeverOutlined';\r\n\r\nimport { SpatialContext } from '../contexts/SpatialContext';\r\nimport { ActiveSpatialContext } from './../contexts/ActiveSpatialContext'\r\nimport { UserMessageContext } from '../contexts/UserMessageContext';\r\n\r\nexport default function SpatialRow({ spatial }) {\r\n\r\n    const { activeSpatialID, setActiveSpatialID } = useContext(ActiveSpatialContext)\r\n    const { deleteSpatialByID } = useContext(SpatialContext)\r\n    const { setAlertDelete } = useContext(UserMessageContext)\r\n\r\n    return <li\r\n        className={\"spatial-row flex-col\"}\r\n        id={spatial.id}\r\n    >\r\n        <div\r\n            className=\"row-header flex-row\"\r\n            onClick={() => {\r\n                (activeSpatialID === spatial.id) ?\r\n                    setActiveSpatialID(null)\r\n                    :\r\n                    setActiveSpatialID(spatial.id)\r\n            }}\r\n        >\r\n            <p className=\"id\">{spatial.id}</p>\r\n            <div className=\"color-sample\" style={{ backgroundColor: spatial.color }}></div>\r\n            <h4 className=\"name\">{spatial.name}</h4>\r\n            {/* <a\r\n                className=\"find\"\r\n                title=\"Centralize map at spatial\"\r\n            // onClick={()=>setCenter()}\r\n            >FindIcon</a> */}\r\n        </div>\r\n        {spatial.id === activeSpatialID && <div className=\"row-content\">\r\n            <div className=\"info\">\r\n                <p className=\"creation-date\">Created:\r\n                    <span>{moment(spatial.creationDate).fromNow()} on {moment(spatial.creationDate).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")}</span>\r\n                </p>\r\n                <p className=\"ElectDist\">Electoral District:\r\n                    <span>{spatial.properties.ElectDist ? spatial.properties.ElectDist : \"No Dist\"}</span>\r\n                </p>\r\n                <p className=\"shape-area\">Area:\r\n                    <span>{spatial.properties.Shape__Area ? spatial.properties.Shape__Area.toFixed(2) : \"No Shape Area\"}</span>\r\n                </p>\r\n                <p className=\"comment-title\">Comment: </p>\r\n                <SpatialComment spatial={spatial} />\r\n            </div>\r\n            <div className=\"edit-info\">\r\n                <SpatialColorPicker spatial={spatial} className=\"color-picker\" />\r\n                <SpatialNameInput spatial={spatial} />\r\n                <a\r\n                    className=\"delete\"\r\n                    title=\"Remove Forever\"\r\n                    onClick={() => {\r\n                        deleteSpatialByID(spatial.id)\r\n                        setAlertDelete(true)\r\n                    }}\r\n                >\r\n                    <DeleteForeverOutlinedIcon />\r\n                </a>\r\n            </div>\r\n        </div>}\r\n\r\n    </li>\r\n}\r\n\r\nconst SpatialComment = ({ spatial }) => {\r\n    const { saveSpatial } = useContext(SpatialContext)\r\n    const [commentText, setCommentText] = useState(spatial.comment)\r\n    useEffect(() => {\r\n        spatial.comment = commentText\r\n        saveSpatial(spatial)\r\n    }, [commentText, saveSpatial, spatial])\r\n    return <TextareaAutosize\r\n        aria-label=\"comment-content\"\r\n        className=\"comment-content\"\r\n        value={commentText}\r\n        placeholder=\"No Comment.\"\r\n        onChange={e => {\r\n            setCommentText(e.target.value)\r\n            // spatial.comment = commentText\r\n            // saveSpatial(spatial)\r\n        }}\r\n    />;\r\n}\r\n\r\nconst SpatialNameInput = ({ spatial }) => {\r\n    const { saveSpatial } = useContext(SpatialContext)\r\n    const [nameText, setNameText] = useState(spatial.name)\r\n    useEffect(() => {\r\n        spatial.name = nameText ? nameText : spatial.name\r\n        saveSpatial(spatial)\r\n    }, [nameText, saveSpatial, spatial])\r\n    return <TextField\r\n        className=\"change-name\"\r\n        value={nameText}\r\n        placeholder=\"Required\"\r\n        onChange={e => {\r\n            setNameText(e.target.value)\r\n            // spatial.name = nameText ? nameText : spatial.name\r\n            // saveSpatial(spatial)\r\n        }}\r\n    />\r\n}\r\n\r\nconst SpatialColorPicker = ({ spatial }) => {\r\n    const { saveSpatial } = useContext(SpatialContext)\r\n    const [color, setColor] = useState(spatial.color)\r\n    useEffect(() => {\r\n        spatial.color = color\r\n        saveSpatial(spatial)\r\n    }, [color, saveSpatial, spatial])\r\n    return <ColorPicker\r\n        disableAlpha\r\n        hideTextfield\r\n        value={color}\r\n        onChange={e => {\r\n            setColor(e.css.backgroundColor.toLocaleLowerCase())\r\n            // spatial.color = color\r\n            // saveSpatial(spatial)\r\n        }}\r\n    />\r\n}","import React, { useContext, useEffect } from 'react';\r\nimport SpatialRow from './SpatialRow'\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nimport { SpatialContext } from './../contexts/SpatialContext'\r\nimport { ActiveSpatialContext } from '../contexts/ActiveSpatialContext';\r\n\r\nimport scrollIntoView from 'scroll-into-view-if-needed'\r\nimport smoothScrollIntoView from 'smooth-scroll-into-view-if-needed'\r\n\r\n\r\nexport default function SpatialList() {\r\n\r\n    const { spatials } = useContext(SpatialContext)\r\n    const { activeSpatialID, setActiveSpatialID } = useContext(\r\n        ActiveSpatialContext\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (activeSpatialID) {\r\n            const scrollIntoViewSmoothly =\r\n                'scrollBehavior' in document.documentElement.style\r\n                    ? smoothScrollIntoView\r\n                    : scrollIntoView\r\n            const node = document.getElementById(activeSpatialID)\r\n            scrollIntoViewSmoothly(node, {\r\n                behavior: 'smooth',\r\n                block: 'center',\r\n            })\r\n        }\r\n    }, [activeSpatialID])\r\n\r\n    return spatials\r\n        ? (<div className=\"spatial-list-container\">\r\n            <div className=\"list-header flex-row flex-space-between\">\r\n                <h3>Spatials:</h3>\r\n                {activeSpatialID && <a\r\n                    className=\"done\"\r\n                    title=\"Done\"\r\n                    onClick={() => setActiveSpatialID(null)\r\n                    }\r\n                >\r\n                    <Icon className=\"done-icon\">done</Icon>\r\n                </a>}\r\n            </div>\r\n            <ul>\r\n                {spatials.features.map((spatial) => {\r\n                    return <SpatialRow\r\n                        spatial={spatial}\r\n                        key={spatial.id} />\r\n                })}\r\n            </ul>\r\n            <p className=\"list-end\">----List-End----</p>\r\n        </div>)\r\n        : null\r\n}","import React, { useContext, useEffect } from \"react\";\r\nimport { Map, TileLayer, FeatureGroup, useLeaflet, Tooltip } from \"react-leaflet\";\r\nimport { EditControl } from \"react-leaflet-draw\";\r\nimport L from \"leaflet\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport { SpatialContext } from '../contexts/SpatialContext'\r\nimport { ActiveSpatialContext } from '../contexts/ActiveSpatialContext'\r\nimport { UserMessageContext } from \"../contexts/UserMessageContext\";\r\n\r\n\r\nexport default function ViaMap() {\r\n    const { spatials } = useContext(SpatialContext)\r\n\r\n    const center = [40.64564461264746, -73.84831527895031]\r\n\r\n    return spatials\r\n        ? (<Map\r\n            center={center}\r\n            zoom={12}>\r\n            < TileLayer\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            />\r\n            <EditableGroup data={spatials} />\r\n        </Map >)\r\n        : (<div className=\"loader-container\">\r\n            <Loader\r\n                className=\"loader\"\r\n                type=\"Circles\"\r\n                color=\"#00BFFF\"\r\n                height={200}\r\n                width={200}\r\n                timeout={30000} //30 secs\r\n            />\r\n        </div>\r\n        )\r\n}\r\n\r\nfunction EditableGroup({ data }) {\r\n    const { activeSpatialID, setActiveSpatialID } = useContext(ActiveSpatialContext)\r\n\r\n    const dataLayer = new L.GeoJSON(data, {\r\n        style: feature => {\r\n            return ({\r\n                fillColor: feature.color,\r\n                fillOpacity: activeSpatialID === feature.id ? 1 : 0.4,\r\n                color: \"black\",\r\n                opacity: activeSpatialID === feature.id ? 1 : 0.2\r\n            })\r\n        },\r\n    });\r\n    const layers = [];\r\n    dataLayer.eachLayer((layer) => {\r\n        layers.push(layer);\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            {layers.map((layer, i) => {\r\n                const { id } = layer.feature;\r\n                return (\r\n                    <EditableLayer\r\n                        key={i}\r\n                        layer={layer}\r\n                        showDrawControl={id === activeSpatialID}\r\n                        onLayerClicked={() => {\r\n                            setActiveSpatialID(id)\r\n                        }}\r\n                    >\r\n                    </EditableLayer >\r\n                );\r\n            })}\r\n            <AddLayer />\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction EditableLayer(props) {\r\n    const { spatials, saveSpatial } = useContext(SpatialContext)\r\n    const { setAlertEdit } = useContext(UserMessageContext)\r\n\r\n    const leaflet = useLeaflet();\r\n    const editLayerRef = React.useRef();\r\n    let drawControlRef = React.useRef();\r\n    let { map } = leaflet;\r\n\r\n    useEffect(() => {\r\n        if (!props.showDrawControl) {\r\n            map.removeControl(drawControlRef.current);\r\n        } else {\r\n            map.addControl(drawControlRef.current);\r\n        }\r\n        editLayerRef.current.leafletElement.clearLayers();\r\n        editLayerRef.current.leafletElement.addLayer(props.layer);\r\n        props.layer.on(\"click\", function (e) {\r\n            props.onLayerClicked(e, drawControlRef.current);\r\n        });\r\n    }, [props, map, spatials]);\r\n\r\n    const onMounted = (ctl) => {\r\n        drawControlRef.current = ctl;\r\n    }\r\n\r\n    const onEdited = e => {\r\n        e.layers.eachLayer(l => {\r\n            const changedLayerGeoJson = l.toGeoJSON();\r\n            const { layer } = props;\r\n            if (changedLayerGeoJson.id === layer.feature.id) {\r\n                changedLayerGeoJson.properties.Shape__Area = L.GeometryUtil.geodesicArea(l.getLatLngs()[0])\r\n                saveSpatial(changedLayerGeoJson)\r\n                setAlertEdit(true)\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <FeatureGroup ref={editLayerRef}>\r\n                <EditControl\r\n                    position=\"topright\"\r\n                    onMounted={onMounted}\r\n                    onEdited={onEdited}\r\n                    edit={{\r\n                        remove: false,\r\n                        edit: true\r\n                    }}\r\n                    draw={{\r\n                        marker: false,\r\n                        circle: false,\r\n                        rectangle: false,\r\n                        polygon: false,\r\n                        polyline: false,\r\n                        circlemarker: false\r\n                    }}\r\n                    {...props}\r\n                />\r\n                <Tooltip sticky><h3>{props.layer.feature.name}</h3>\r\n                    <p>{Math.floor(props.layer.feature.properties.Shape__Area) + \" sq m\"}</p>\r\n                </Tooltip>\r\n            </FeatureGroup>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AddLayer(props) {\r\n    const { saveSpatial } = useContext(SpatialContext)\r\n    const { activeSpatialID } = useContext(ActiveSpatialContext)\r\n    const { setAlertCreate } = useContext(UserMessageContext)\r\n\r\n    const leaflet = useLeaflet();\r\n    let drawControlRef = React.useRef();\r\n    let { map } = leaflet;\r\n\r\n    useEffect(() => {\r\n        if (activeSpatialID) {\r\n            map.removeControl(drawControlRef.current);\r\n        } else {\r\n            map.addControl(drawControlRef.current);\r\n        }\r\n    }, [props, map, activeSpatialID]);\r\n\r\n    const onMounted = (ctl) => {\r\n        drawControlRef.current = ctl;\r\n    }\r\n\r\n    const onCreated = e => {\r\n        const newSpatial = e.layer.toGeoJSON()\r\n        newSpatial.properties.Shape__Area = L.GeometryUtil.geodesicArea(e.layer.getLatLngs()[0])\r\n        saveSpatial(newSpatial)\r\n        setAlertCreate(true)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <FeatureGroup>\r\n                <EditControl\r\n                    position=\"topright\"\r\n                    onMounted={onMounted}\r\n                    onCreated={onCreated}\r\n                    edit={{\r\n                        remove: false,\r\n                        edit: false\r\n                    }}\r\n                    draw={{\r\n                        marker: false,\r\n                        circle: false,\r\n                        rectangle: false,\r\n                        polygon: true,\r\n                        polyline: false,\r\n                        circlemarker: false\r\n                    }}\r\n                    {...props}\r\n                />\r\n            </FeatureGroup>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { UserMessageContext } from './../contexts/UserMessageContext'\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nexport default function UserMessages() {\r\n\r\n    const {\r\n        alertEdit,\r\n        setAlertEdit,\r\n        alertDelete,\r\n        setAlertDelete,\r\n        alertCreate,\r\n        setAlertCreate,\r\n    } = useContext(UserMessageContext)\r\n\r\n    return (\r\n        <div className=\"user-message\">\r\n            <Snackbar\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                open={alertEdit}\r\n                autoHideDuration={6000}\r\n                onClose={() => setAlertEdit(false)}>\r\n                <MuiAlert\r\n                    onClose={() => setAlertEdit(false)}\r\n                    severity=\"info\"\r\n                    elevation={6}\r\n                    variant=\"filled\"\r\n                >\r\n                    Spatial was saved successfully\r\n                </MuiAlert>\r\n            </Snackbar>\r\n            <Snackbar\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                open={alertDelete}\r\n                autoHideDuration={6000}\r\n                onClose={() => setAlertDelete(false)}>\r\n                <MuiAlert\r\n                    onClose={() => setAlertDelete(false)}\r\n                    severity=\"warning\"\r\n                    elevation={6}\r\n                    variant=\"filled\"\r\n                >\r\n                    Spatial was deleted succssfully\r\n                </MuiAlert>\r\n            </Snackbar>\r\n            <Snackbar\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                open={alertCreate}\r\n                autoHideDuration={6000}\r\n                onClose={() => setAlertCreate(false)}>\r\n                <MuiAlert\r\n                    onClose={() => setAlertCreate(false)}\r\n                    severity=\"success\"\r\n                    elevation={6}\r\n                    variant=\"filled\" >\r\n                    Spatial created successfully\r\n                </MuiAlert>\r\n            </Snackbar>\r\n        </div>\r\n    )\r\n}","import { useContext } from \"react\";\nimport \"./App.scss\";\nimport SpatialList from \"./components/SpatialList\";\nimport ViaMap from \"./components/ViaMap\";\n\nimport { SpatialContext } from \"./contexts/SpatialContext\";\nimport UserMessages from \"./components/UserMessages\";\n\nfunction App() {\n\tconst { spatials } = useContext(SpatialContext);\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<UserMessages />\n\t\t\t<ViaMap />\n\t\t\t{spatials && <SpatialList />}\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { SpatialProvider } from \"./contexts/SpatialContext\";\nimport { ActiveSpatialProvider } from \"./contexts/ActiveSpatialContext\";\nimport { UserMessageProvider } from \"./contexts/UserMessageContext\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<ActiveSpatialProvider>\n\t\t\t<SpatialProvider>\n\t\t\t\t<UserMessageProvider>\n\t\t\t\t\t<App />\n\t\t\t\t</UserMessageProvider>\n\t\t\t</SpatialProvider>\n\t\t</ActiveSpatialProvider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}